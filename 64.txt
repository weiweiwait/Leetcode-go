func minPathSum(grid [][]int) int {
    if len(grid) == 0 || len(grid[0])==0{
        return 0
    }
    x ,y := len(grid) , len(grid[0])
    dp := make([][]int,x)
    for i:=0 ;i<x;i++{
        dp[i] = make([]int,y)
    }
    dp[0][0] = grid[0][0]
    for i:=1;i<x;i++{
        dp[i][0] = dp[i-1][0]+grid[i][0]
    }
    for j:=1;j<y;j++{
        dp[0][j] = dp[0][j-1] + grid[0][j]
    }
    for i:=1;i<x;i++{
        for j:= 1;j<y;j++{
            dp[i][j] = min(dp[i-1][j],dp[i][j-1])+grid[i][j]
        }
    }
    return dp[x-1][y-1]
}