/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func allPossibleFBT(n int) []*TreeNode {
    var fullBinaryTrees []*TreeNode
	if n%2 == 0 {
		return fullBinaryTrees
	}
	if n == 1 {
		fullBinaryTrees = append(fullBinaryTrees, &TreeNode{Val: 0})
		return fullBinaryTrees
	}
	for i := 1; i < n; i += 2 {
		leftSubtrees := allPossibleFBT(i)
		rightSubtrees := allPossibleFBT(n - 1 - i)
		for _, leftSubtree := range leftSubtrees {
			for _, rightSubtree := range rightSubtrees {
				root := &TreeNode{Val: 0, Left: leftSubtree, Right: rightSubtree}
				fullBinaryTrees = append(fullBinaryTrees, root)
			}
		}
	}
	return fullBinaryTrees
}