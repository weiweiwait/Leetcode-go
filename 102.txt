/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
 func levelOrder(root *TreeNode) [][]int {
    if root == nil {
        return [][]int{}
    }

    var queue []*TreeNode
    queue = append(queue, root) 
    result := make([][]int, 0)

    for len(queue) > 0 {
        levelSize := len(queue) 
        level := make([]int, 0)

    
        for i := 0; i < levelSize; i++ {
        
            current := queue[0]
            queue = queue[1:] 
            level = append(level, current.Val) 

            if current.Left != nil {
                queue = append(queue, current.Left)
            }
            if current.Right != nil {
                queue = append(queue, current.Right)
            }
        }
        result = append(result, level)
    }

    return result
}