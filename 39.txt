func combinationSum(candidates []int, target int) [][]int {
    var result [][]int
    var path []int

    var dfs func(remain int, start int)
    dfs = func(remain int, start int) {
        if remain == 0 {
            result = append(result, append([]int(nil), path...))
            return
        }
        if remain < 0 {
            return
        }
        for i := start; i < len(candidates); i++ {
            path = append(path, candidates[i])
            dfs(remain-candidates[i], i)
            path = path[:len(path)-1] 
        }
    }

    dfs(target, 0)
    return result
}